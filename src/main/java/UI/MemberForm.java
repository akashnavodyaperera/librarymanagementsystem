package UI;

import DAO.MemberDao;
import Model.Member;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;
public class MemberForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MemberForm.class.getName());
     private final MemberDao memberDao = new MemberDao();
    
    public MemberForm() {
        initComponents();
        
         this.setTitle("Member Management");
        this.setResizable(false);
    loadMembers();
        
        membertable.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                fillFormFromTable();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        membertable = new javax.swing.JTable();
        nametxt = new javax.swing.JTextField();
        emailtxt = new javax.swing.JTextField();
        addresstxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        phonenotxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        searchbtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));

        setLocation(new java.awt.Point(400, 200));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("LIBRARY MANAGEMENT SYSTEM");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 420, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("SINDATHRIYA DIVISION");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 330, 40));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel1.setText("Manage Members");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 170, -1));
        jPanel1.add(searchtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, 360, -1));

        membertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Email", "Phone No", "Address"
            }
        ));
        jScrollPane1.setViewportView(membertable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, -1, 380));
        jPanel1.add(nametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 250, -1));
        jPanel1.add(emailtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 250, -1));

        addresstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addresstxtActionPerformed(evt);
            }
        });
        jPanel1.add(addresstxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 250, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Address");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 120, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 102));
        jLabel6.setText("Email");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 100, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 100, -1));

        addbtn.setBackground(new java.awt.Color(0, 204, 0));
        addbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel1.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 120, 50));

        deletebtn.setBackground(new java.awt.Color(255, 0, 0));
        deletebtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel1.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 120, 50));

        clearbtn.setBackground(new java.awt.Color(0, 0, 255));
        clearbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clearbtn.setForeground(new java.awt.Color(255, 255, 255));
        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 120, 50));

        updatebtn.setBackground(new java.awt.Color(204, 204, 0));
        updatebtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        jPanel1.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 120, 50));

        phonenotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenotxtActionPerformed(evt);
            }
        });
        jPanel1.add(phonenotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 250, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("Phone No");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 120, -1));

        searchbtn.setBackground(new java.awt.Color(204, 0, 204));
        searchbtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 90, -1));

        jPanel3.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        addMember();
    }//GEN-LAST:event_addbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        deleteMember();
    }//GEN-LAST:event_deletebtnActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        clearFields();
    }//GEN-LAST:event_clearbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
       updateMember();
    }//GEN-LAST:event_updatebtnActionPerformed

    private void addresstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addresstxtActionPerformed
        
    }//GEN-LAST:event_addresstxtActionPerformed

    private void phonenotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenotxtActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        searchMember();
    }//GEN-LAST:event_searchbtnActionPerformed

     
    private void addMember() {
        if (nametxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter member name!", "Validation Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Member member = new Member();
        member.setName(nametxt.getText().trim());
        member.setEmail(emailtxt.getText().trim());
        member.setPhone(phonenotxt.getText().trim());
        member.setAddress(addresstxt.getText().trim());
        member.setJoinedDate(new Date(System.currentTimeMillis())); // Current date

        if (memberDao.addMember(member)) {
            JOptionPane.showMessageDialog(this, "Member added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearFields();
            loadMembers();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add member!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updateMember() {
        int selectedRow = membertable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a member to update!", "Selection Required", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String originalName = membertable.getValueAt(selectedRow, 0).toString();
        Member existingMember = memberDao.getMemberByName(originalName);
        
        if (existingMember == null) {
            JOptionPane.showMessageDialog(this, "Member not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Member member = new Member();
        member.setMemberId(existingMember.getMemberId());
        member.setName(nametxt.getText().trim().isEmpty() ? existingMember.getName() : nametxt.getText().trim());
        member.setEmail(emailtxt.getText().trim().isEmpty() ? existingMember.getEmail() : emailtxt.getText().trim());
        member.setPhone(phonenotxt.getText().trim().isEmpty() ? existingMember.getPhone() : phonenotxt.getText().trim());
        member.setAddress(addresstxt.getText().trim().isEmpty() ? existingMember.getAddress() : addresstxt.getText().trim());
        member.setJoinedDate(existingMember.getJoinedDate()); // Keep original joined date

        if (memberDao.updateMember(member)) {
            JOptionPane.showMessageDialog(this, "Member updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearFields();
            loadMembers();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update member!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deleteMember() {
        int selectedRow = membertable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a member to delete!", "Selection Required", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String name = membertable.getValueAt(selectedRow, 0).toString();
        Member member = memberDao.getMemberByName(name);
        
        if (member == null) {
            JOptionPane.showMessageDialog(this, "Member not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to delete this member?", 
            "Confirm Deletion", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
            
        if (confirm == JOptionPane.YES_OPTION) {
            if (memberDao.deleteMember(member.getMemberId())) {
                JOptionPane.showMessageDialog(this, "Member deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
                loadMembers();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete member!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void searchMember() {
        String searchTerm = searchtxt.getText().trim();
        if (searchTerm.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a search term!", "Input Required", JOptionPane.WARNING_MESSAGE);
            loadMembers(); // Show all members if search is empty
            return;
        }

        List<Member> members = memberDao.searchMembers(searchTerm);
        if (!members.isEmpty()) {
            // Update table to show search results
            DefaultTableModel model = (DefaultTableModel) membertable.getModel();
            model.setRowCount(0);
            for (Member m : members) {
                model.addRow(new Object[]{
                    m.getName(),
                    m.getEmail(),
                    m.getPhone(),
                    m.getAddress()
                });
            }
            
            if (members.size() == 1) {
                Member member = members.get(0);
                nametxt.setText(member.getName());
                emailtxt.setText(member.getEmail());
                phonenotxt.setText(member.getPhone());
                addresstxt.setText(member.getAddress());
            }
        } else {
            JOptionPane.showMessageDialog(this, "No members found!", "Not Found", JOptionPane.INFORMATION_MESSAGE);
            loadMembers(); // Reload all members
        }
    }

    private void clearFields() {
        nametxt.setText("");
        emailtxt.setText("");
        phonenotxt.setText("");
        addresstxt.setText("");
        searchtxt.setText("");
        membertable.clearSelection();
    }

    private void loadMembers() {
        List<Member> members = memberDao.getAllMembers();
        DefaultTableModel model = (DefaultTableModel) membertable.getModel();
        model.setRowCount(0);
        for (Member m : members) {
            model.addRow(new Object[]{
                m.getName(),
                m.getEmail(),
                m.getPhone(),
                m.getAddress()
            });
        }
    }

    private void fillFormFromTable() {
        int row = membertable.getSelectedRow();
        if (row >= 0) {
            nametxt.setText(membertable.getValueAt(row, 0).toString());
            emailtxt.setText(membertable.getValueAt(row, 1).toString());
            phonenotxt.setText(membertable.getValueAt(row, 2).toString());
            addresstxt.setText(membertable.getValueAt(row, 3).toString());
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new MemberForm().setVisible(true));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField addresstxt;
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable membertable;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField phonenotxt;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
